<?php

namespace App\Http\Controllers\Api\V1;

use App\Http\Transformers\TaskTransformer;
use App\Models\Task;
use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class TaskController extends ApiController
{
    /**
     * TaskController constructor.
     */
    public function __construct()
    {
        $this->modelo = new Task();
    }

    public function store()
    {
        $data = \request()->all();
        if (!request()->has('date')) {
            $data['date'] = Carbon::now();
        }

        if ($user = auth('api')->user()) {
            $data['user_id'] = $user->id;
        }

        $task = $this->modelo->create($data);
        return $this->ok($task);
    }

    public function index()
    {
        $tasks = $this->modelo->newQuery();
        $this->applyFilters($tasks);
        if ($day = request()->input('day', null)) {
            $tasks->whereDate('date', Carbon::parse($day));
        }

        if ($starDay = request('star_day') && $endDay = request('end_day')) {
            $tasks->whereBetween('date', [Carbon::parse($starDay), Carbon::parse($endDay)]);
        }

        $tasks = $tasks->get();
        return $this->ok($tasks);
    }

    public function update(Task $task)
    {
        $task->update(\request()->all());
        return $this->ok($task);
    }

    public function destroy(Task $task)
    {
        $task->delete();
        $this->ok($task);
    }

    protected function getTransformer()
    {
        return new TaskTransformer(); // TODO: Change the autogenerated stub
    }
}
